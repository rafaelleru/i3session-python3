#!/usr/bin/env python3

import os
import i3ipc
import sys
import pickle
import subprocess
import logging
from time import sleep
import xdg
import io

def save(workspaces, session_file):
    # Array of layouts json
    layouts = []

    for w in workspaces:
        saved_workspace = {}
        saved_workspace['num'] = w.num
        output = subprocess.check_output(['i3-save-tree',
                                          '--workspace', str(w)])
        saved_workspace['json'] = output
        layouts.append(saved_workspace)

    pickle.dump(layouts, open(session_file, 'wb'))


def restore(i3, layouts):
    for workspace in layouts:
        f = open('/tmp/w.json', 'w')
        f.write(str(workspace['json']))
        i3.command('workspace %s' % workspace['num'])
        i3.command('append-layout /tmp/w.json')
        f.close()

# use i3-nagbar to show a message while restoring
def nag_bar_process():
    return subprocess.Popen(["i3-nagbar", "-m", "Currently restoring session. Don't change workspace focus!"])

# print usage instructions
def show_help():
    print(sys.argv[0] + " <save|restore> [workspace]")

if __name__ == '__main__':
    # logging.basicConfig(level=logging.DEBUG)

    # If ~/.i3 doesn't exist use XDG_CONFIG_DIR
    home = os.getenv("HOME")
    config_dir = os.path.join(home, '.i3')
    i3 = i3ipc.Connection()

    if not os.path.isdir(config_dir):
        config_dir = os.path.join(xdg_config_home, 'i3')

    config_file = os.path.join(config_dir, 'session')
    logging.basicConfig(filename='i3session.log', level=logging.DEBUG)

    if len(sys.argv) < 2:
        show_help()
        sys.exit(1)

    if sys.argv[1] == 'save':
        print("Saving...")
        session = i3.get_tree()
        nodes = save(session.workspaces(), config_file)

        print("Session saved to " + config_file)
    elif sys.argv[1] == 'restore':
        nag_bar = nag_bar_process()
        print("Restoring...")

        # load session from file
        try:
            session = pickle.load(open(config_file, "rb"))
        except Exception:
            print("Can't restore saved session...")
            sys.exit(1)

        print(session)
        restore(i3, session)
        nag_bar.terminate()
        print("Session restored from " + config_file)
    else:
        show_help()
        sys.exit(1)
